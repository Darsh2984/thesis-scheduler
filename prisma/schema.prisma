datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String  @unique
  role      Role
  availability UserAvailability[]
  topicsAsSupervisor BachelorTopic[] @relation("Supervisor")
  topicsAsReviewer   BachelorTopic[] @relation("Reviewer")
}

enum Role {
  FT_SUPERVISOR
  PT_SUPERVISOR
  REVIEWER
  BOTH
}

model BachelorTopic {
  id            Int     @id @default(autoincrement())
  title         String
  supervisorId  Int
  reviewerId    Int

  supervisor    User    @relation("Supervisor", fields: [supervisorId], references: [id])
  reviewer      User    @relation("Reviewer", fields: [reviewerId], references: [id])

  schedules     Schedule[]
  conflicts     Conflict[]
}

model Room {
  id        Int       @id @default(autoincrement())
  name      String
  schedules Schedule[]
}

model TimeSlot {
  id        Int       @id @default(autoincrement())
  date      DateTime
  startTime String
  endTime   String
  schedules Schedule[]
}

model UserAvailability {
  id          Int      @id @default(autoincrement())
  userId      Int
  date        DateTime
  isAvailable Boolean

  user        User     @relation(fields: [userId], references: [id])
}

model Schedule {
  id        Int     @id @default(autoincrement())
  topicId   Int
  roomId    Int
  slotId    Int

  topic     BachelorTopic @relation(fields: [topicId], references: [id])
  room      Room          @relation(fields: [roomId], references: [id])
  slot      TimeSlot      @relation(fields: [slotId], references: [id])
}

model Conflict {
  id        Int     @id @default(autoincrement())
  topicId   Int
  reason    String

  topic     BachelorTopic @relation(fields: [topicId], references: [id])
}
